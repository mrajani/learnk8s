---
- hosts: "{{ server_hosts | default('ubuntu') }}"
  gather_facts: True
  become: true
  vars_files:
    - "ansible_vars_{{ ansible_distribution | lower }}.yml"
  vars:
    docker_version: "{{ version }}-{{ ansible_distribution_release }}"

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=present update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=present update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo:  deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable
        state: present

    - name: Update apt and install docker-ce-cli {{ docker_version }}
      apt: update_cache=yes name=docker-ce-cli={{ docker_version }} state=present

    - name: Update apt and install docker-ce {{ docker_version }}
      apt: update_cache=yes name=docker-ce={{ docker_version }} state=present

- hosts: "{{ server_hosts | default('k8s*') }}"
  gather_facts: True
  become: true
  tags: prereqs
  vars_files:
    - "ansible_vars_{{ ansible_distribution | lower }}.yml"
    - "ansible_vars_k8s.yml"

  tasks:
    - name: Add Kubernetes GPG apt Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernets Repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: Install kubectl, kubelet, kubeadm
      apt: update_cache=yes name={{ item }}={{ k8s_version }} state=present
      loop: [ 'kubectl', 'kubelet', 'kubeadm']

    - name: Enable ip forward and bridging
      blockinfile:
        dest: /etc/sysctl.d/99-k8s.conf
        create: yes
        block: |
         net.ipv4.ip_forward = 1
         net.bridge.bridge-nf-call-iptables = 1
         net.bridge.bridge-nf-call-ip6tables = 1

    - name: Restart Sysctl
      sysctl:
        name: net.ipv4.ip_forward
        state: present
        value: "1"
        sysctl_set: yes
        reload: yes

    - name: Disable Swap
      shell: |
        swapoff -a

    - name: Disable in fstab
      replace:
        path: /etc/fstab
        regexp: '^(.+?\sswap\s+sw\s+.*)$'
        replace: '# \1'
...
